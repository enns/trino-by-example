apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "coordinator.fullname" . }}
  labels:
    {{- include "coordinator.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "coordinator.fullname" . }}
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "coordinator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "coordinator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coordinator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: httpport
              containerPort: {{ .Values.pod.httpport }}
              protocol: TCP
            - name: tlsport
              containerPort: {{ .Values.pod.tlsport }}
              protocol: TCP              
          livenessProbe:
            httpGet:
              path: /v1/info/state
              port: httpport
          readinessProbe:
            httpGet:
              path: /v1/info/state
              port: httpport
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          env:
          - name: ENVIRONMENT
            value: {{ .Values.environment }}
{{- if .Values.secret.s3.enabled }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
             secretKeyRef: 
              name: {{ include "coordinator.fullname" . }}-s3-secret
              key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "coordinator.fullname" . }}-s3-secret
                key: AWS_SECRET_ACCESS_KEY
{{- end }}

          volumeMounts:
          - mountPath: /etc/trino/catalog
            name: catalog-config-mount
          - mountPath: /etc/trino
            name: config-mount
          - mountPath: /opt/trino/security/rules
            name: rule-secret-mount
          - mountPath: /opt/trino/security/passwords
            name: password-secret-mount          
          - mountPath: /opt/trino/certs
            name: cert-secret-mount  
          - mountPath: /data/trino
            name: data-dir   
          - mountPath: /tmp
            name: tmp-dir   

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-mount
        configMap:
          name: {{ include "coordinator.fullname" . }}-configmap
      - name: catalog-config-mount
        configMap:
          name: {{ include "coordinator.fullname" . }}-catalog-configmap
      - name: rule-secret-mount
        secret:
          secretName: {{ include "coordinator.fullname" . }}-rule-secret
      - name: password-secret-mount
        secret:
          secretName: {{ include "coordinator.fullname" . }}-password-secret
      - name: cert-secret-mount
        secret:
          secretName: {{ include "coordinator.fullname" . }}-cert-secret
      - name: data-dir
        emptyDir: {}    
      - name: tmp-dir
        emptyDir: {}    